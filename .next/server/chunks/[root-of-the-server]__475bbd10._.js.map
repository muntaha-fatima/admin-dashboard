{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dell/admin%20dashborad/app/api/book/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { promises as fs } from \"fs\";\r\nimport path from \"path\";\r\n\r\nexport async function POST(request: Request) {\r\n  try {\r\n    const { searchParams } = new URL(request.url);\r\n    const type = searchParams.get(\"type\");\r\n\r\n    if (!type || (type !== \"book\" && type !== \"promo\")) {\r\n      return NextResponse.json({ message: \"Type zaroori hai: book ya promo\" }, { status: 400 });\r\n    }\r\n\r\n    const formData = await request.formData();\r\n\r\n    if (type === \"book\") {\r\n      const image = formData.get(\"image\") as File;\r\n      const pdf = formData.get(\"pdf\") as File;\r\n\r\n      if (!image || !pdf) {\r\n        return NextResponse.json({ message: \"Book ke liye image aur PDF dono zaroori hain\" }, { status: 400 });\r\n      }\r\n\r\n      if (![\"image/jpeg\", \"image/png\"].includes(image.type)) {\r\n        return NextResponse.json({ message: \"Image sirf JPEG ya PNG ho sakti hai\" }, { status: 400 });\r\n      }\r\n      if (pdf.type !== \"application/pdf\") {\r\n        return NextResponse.json({ message: \"PDF sirf PDF format mein ho\" }, { status: 400 });\r\n      }\r\n\r\n      const uploadDir = path.join(process.cwd(), \"public/uploads/books\");\r\n      await fs.mkdir(uploadDir, { recursive: true });\r\n\r\n      const imagePath = path.join(uploadDir, `${Date.now()}-${image.name}`);\r\n      const pdfPath = path.join(uploadDir, `${Date.now()}-${pdf.name}`);\r\n\r\n      await fs.writeFile(imagePath, Buffer.from(await image.arrayBuffer()));\r\n      await fs.writeFile(pdfPath, Buffer.from(await pdf.arrayBuffer()));\r\n\r\n      return NextResponse.json({\r\n        imageUrl: `/uploads/books/${path.basename(imagePath)}`,\r\n        pdfUrl: `/uploads/books/${path.basename(pdfPath)}`,\r\n      }, { status: 200 });\r\n    } else if (type === \"promo\") {\r\n      const file = formData.get(\"file\") as File;\r\n      const title = formData.get(\"title\") || \"Promotional Image\";\r\n      const isActive = formData.get(\"isActive\") === \"true\";\r\n\r\n      if (!file) {\r\n        return NextResponse.json({ message: \"Promo image file zaroori hai\" }, { status: 400 });\r\n      }\r\n\r\n      if (![\"image/jpeg\", \"image/png\"].includes(file.type)) {\r\n        return NextResponse.json({ message: \"Promo image sirf JPEG ya PNG ho sakti hai\" }, { status: 400 });\r\n      }\r\n\r\n      const uploadDir = path.join(process.cwd(), \"public/uploads/promo\");\r\n      await fs.mkdir(uploadDir, { recursive: true });\r\n      const filePath = path.join(uploadDir, `${Date.now()}-${file.name}`);\r\n      await fs.writeFile(filePath, Buffer.from(await file.arrayBuffer()));\r\n\r\n      const promoData = {\r\n        _id: Math.random().toString(36).slice(2),\r\n        promoImageUrl: `/uploads/promo/${path.basename(filePath)}`,\r\n        title,\r\n        isActive,\r\n        contentType: \"image\",\r\n      };\r\n\r\n      const promosFile = path.join(process.cwd(), \"data/promo-images.json\");\r\n      const promos = JSON.parse(await fs.readFile(promosFile, \"utf-8\").catch(() => \"[]\"));\r\n      if (promos.some((p: any) => p.promoImageUrl === promoData.promoImageUrl)) {\r\n        return NextResponse.json({ message: \"Yeh promo image pehle se mojood hai\" }, { status: 400 });\r\n      }\r\n      promos.push(promoData);\r\n      await fs.writeFile(promosFile, JSON.stringify(promos, null, 2));\r\n\r\n      return NextResponse.json(promoData, { status: 201 });\r\n    }\r\n  } catch (err) {\r\n    console.error(\"Upload error:\", err);\r\n    return NextResponse.json({ message: \"File upload mein error: \" + (err as Error).message }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function PUT(request: Request) {\r\n  try {\r\n    const { searchParams } = new URL(request.url);\r\n    const type = searchParams.get(\"type\");\r\n    const id = searchParams.get(\"id\");\r\n\r\n    if (!type || !id || (type !== \"book\" && type !== \"promo\")) {\r\n      return NextResponse.json({ message: \"Type aur ID zaroori hain\" }, { status: 400 });\r\n    }\r\n\r\n    const formData = await request.formData();\r\n\r\n    if (type === \"promo\") {\r\n      const file = formData.get(\"file\") as File | null;\r\n      const title = formData.get(\"title\") || \"Promotional Image\";\r\n      const isActive = formData.get(\"isActive\") === \"true\";\r\n\r\n      const promosFile = path.join(process.cwd(), \"data/promo-images.json\");\r\n      const promos = JSON.parse(await fs.readFile(promosFile, \"utf-8\").catch(() => \"[]\"));\r\n      const index = promos.findIndex((p: any) => p._id === id);\r\n      if (index === -1) {\r\n        return NextResponse.json({ message: \"Promo image nahi mili\" }, { status: 404 });\r\n      }\r\n\r\n      let promoImageUrl = promos[index].promoImageUrl;\r\n      if (file) {\r\n        if (![\"image/jpeg\", \"image/png\"].includes(file.type)) {\r\n          return NextResponse.json({ message: \"Image sirf JPEG ya PNG ho sakti hai\" }, { status: 400 });\r\n        }\r\n        const uploadDir = path.join(process.cwd(), \"public/uploads/promo\");\r\n        await fs.mkdir(uploadDir, { recursive: true });\r\n        const filePath = path.join(uploadDir, `${Date.now()}-${file.name}`);\r\n        await fs.writeFile(filePath, Buffer.from(await file.arrayBuffer()));\r\n        promoImageUrl = `/uploads/promo/${path.basename(filePath)}`;\r\n      }\r\n\r\n      promos[index] = { _id: id, promoImageUrl, title, isActive, contentType: \"image\" };\r\n      await fs.writeFile(promosFile, JSON.stringify(promos, null, 2));\r\n      return NextResponse.json(promos[index], { status: 200 });\r\n    } else {\r\n      return NextResponse.json({ message: \"Book update abhi supported nahi\" }, { status: 501 });\r\n    }\r\n  } catch (err) {\r\n    console.error(\"Update error:\", err);\r\n    return NextResponse.json({ message: \"Update mein error: \" + (err as Error).message }, { status: 500 });\r\n  }\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}