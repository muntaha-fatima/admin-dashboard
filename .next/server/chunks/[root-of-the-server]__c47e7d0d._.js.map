{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dell/admin%20dashborad/app/api/upload/route.ts"],"sourcesContent":["// app/api/upload/route.ts\r\n\r\nimport { NextResponse } from 'next/server';\r\nimport fs from 'fs/promises';\r\nimport path from 'path';\r\n\r\n// Set the max file size limit for this route\r\nexport const config = {\r\n  api: {\r\n    bodyParser: false,\r\n  },\r\n};\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const formData = await req.formData();\r\n    const type = formData.get('type');\r\n\r\n    if (type === 'book') {\r\n      const imageFile = formData.get('image') as File;\r\n      const pdfFile = formData.get('pdf') as File;\r\n\r\n      if (!imageFile || !pdfFile) {\r\n        return NextResponse.json({ message: 'Both image and PDF files are required.' }, { status: 400 });\r\n      }\r\n\r\n      // Save image file\r\n      const imageBuffer = Buffer.from(await imageFile.arrayBuffer());\r\n      const imageFileName = `${Date.now()}-${imageFile.name}`;\r\n      const imagePath = path.join(process.cwd(), 'public/uploads', imageFileName);\r\n      await fs.writeFile(imagePath, imageBuffer);\r\n\r\n      // Save PDF file\r\n      const pdfBuffer = Buffer.from(await pdfFile.arrayBuffer());\r\n      const pdfFileName = `${Date.now()}-${pdfFile.name}`;\r\n      const pdfPath = path.join(process.cwd(), 'public/uploads', pdfFileName);\r\n      await fs.writeFile(pdfPath, pdfBuffer);\r\n\r\n      return NextResponse.json({\r\n        imageUrl: `/uploads/${imageFileName}`,\r\n        pdfUrl: `/uploads/${pdfFileName}`\r\n      }, { status: 200 });\r\n    } else if (type === 'promo') {\r\n      const promoFile = formData.get('promo') as File;\r\n\r\n      if (!promoFile) {\r\n        return NextResponse.json({ message: 'Promo image file is required.' }, { status: 400 });\r\n      }\r\n\r\n      const promoBuffer = Buffer.from(await promoFile.arrayBuffer());\r\n      const promoFileName = `${Date.now()}-${promoFile.name}`;\r\n      const promoPath = path.join(process.cwd(), 'public/uploads', promoFileName);\r\n      await fs.writeFile(promoPath, promoBuffer);\r\n\r\n      return NextResponse.json({\r\n        promoImageUrl: `/uploads/${promoFileName}`\r\n      }, { status: 200 });\r\n    }\r\n\r\n    return NextResponse.json({ message: 'Invalid upload type.' }, { status: 400 });\r\n  } catch (error) {\r\n    console.error(\"File upload error:\", error);\r\n    return NextResponse.json({ message: 'File upload failed.' }, { status: 500 });\r\n  }\r\n}"],"names":[],"mappings":"AAAA,0BAA0B;;;;;AAE1B;AACA;AACA;;;;AAGO,MAAM,SAAS;IACpB,KAAK;QACH,YAAY;IACd;AACF;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,WAAW,MAAM,IAAI,QAAQ;QACnC,MAAM,OAAO,SAAS,GAAG,CAAC;QAE1B,IAAI,SAAS,QAAQ;YACnB,MAAM,YAAY,SAAS,GAAG,CAAC;YAC/B,MAAM,UAAU,SAAS,GAAG,CAAC;YAE7B,IAAI,CAAC,aAAa,CAAC,SAAS;gBAC1B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBAAE,SAAS;gBAAyC,GAAG;oBAAE,QAAQ;gBAAI;YAChG;YAEA,kBAAkB;YAClB,MAAM,cAAc,OAAO,IAAI,CAAC,MAAM,UAAU,WAAW;YAC3D,MAAM,gBAAgB,GAAG,KAAK,GAAG,GAAG,CAAC,EAAE,UAAU,IAAI,EAAE;YACvD,MAAM,YAAY,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,kBAAkB;YAC7D,MAAM,qHAAA,CAAA,UAAE,CAAC,SAAS,CAAC,WAAW;YAE9B,gBAAgB;YAChB,MAAM,YAAY,OAAO,IAAI,CAAC,MAAM,QAAQ,WAAW;YACvD,MAAM,cAAc,GAAG,KAAK,GAAG,GAAG,CAAC,EAAE,QAAQ,IAAI,EAAE;YACnD,MAAM,UAAU,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,kBAAkB;YAC3D,MAAM,qHAAA,CAAA,UAAE,CAAC,SAAS,CAAC,SAAS;YAE5B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,UAAU,CAAC,SAAS,EAAE,eAAe;gBACrC,QAAQ,CAAC,SAAS,EAAE,aAAa;YACnC,GAAG;gBAAE,QAAQ;YAAI;QACnB,OAAO,IAAI,SAAS,SAAS;YAC3B,MAAM,YAAY,SAAS,GAAG,CAAC;YAE/B,IAAI,CAAC,WAAW;gBACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBAAE,SAAS;gBAAgC,GAAG;oBAAE,QAAQ;gBAAI;YACvF;YAEA,MAAM,cAAc,OAAO,IAAI,CAAC,MAAM,UAAU,WAAW;YAC3D,MAAM,gBAAgB,GAAG,KAAK,GAAG,GAAG,CAAC,EAAE,UAAU,IAAI,EAAE;YACvD,MAAM,YAAY,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,kBAAkB;YAC7D,MAAM,qHAAA,CAAA,UAAE,CAAC,SAAS,CAAC,WAAW;YAE9B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,eAAe,CAAC,SAAS,EAAE,eAAe;YAC5C,GAAG;gBAAE,QAAQ;YAAI;QACnB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAuB,GAAG;YAAE,QAAQ;QAAI;IAC9E,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sBAAsB;QACpC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAsB,GAAG;YAAE,QAAQ;QAAI;IAC7E;AACF","debugId":null}}]
}