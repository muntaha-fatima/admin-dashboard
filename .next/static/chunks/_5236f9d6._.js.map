{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dell/admin%20dashborad/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dell/admin%20dashborad/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dell/admin%20dashborad/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dell/admin%20dashborad/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dell/admin%20dashborad/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dell/admin%20dashborad/app/admin/page.tsx"],"sourcesContent":["\r\n\r\n// 'use client';\r\n\r\n// import { useState } from \"react\";\r\n// import { addDoc, collection } from \"firebase/firestore\";\r\n// import { db } from \"@/lib/firebase\";\r\n\r\n// export default function HomePage() {\r\n//   const [product, setProduct] = useState({\r\n//     name: \"\",\r\n//     price: \"\",\r\n//     brand: \"\",\r\n//     image: \"\",\r\n//     description: \"\"\r\n//   });\r\n\r\n//   const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n//     setProduct({ ...product, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e: React.FormEvent) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await addDoc(collection(db, \"products\"), product);\r\n//       alert(\"Product added!\");\r\n//       setProduct({ name: \"\", price: \"\", brand: \"\", image: \"\", description: \"\" });\r\n//     } catch (error) {\r\n//       console.error(\"Error adding product:\", error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"sm:p-56 p-10\">\r\n//     <div className=\"bg-white p-8 max-w-xl mx-auto\">\r\n//       <h1 className=\"text-2xl font-bold mb-4\">Add New Product</h1>\r\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n//         {[\"name\", \"price\", \"brand\", \"image\", \"description\"].map((field) => (\r\n//           <input\r\n//             key={field}\r\n//             name={field}\r\n//             placeholder={field}\r\n//             value={product[field as keyof typeof product]}\r\n//             onChange={handleChange}\r\n//             className=\"block w-full p-2 border rounded text-black\"\r\n//             required\r\n//           />\r\n//         ))}\r\n//         <button\r\n//           type=\"submit\"\r\n//           className=\"bg-blue-600 text-white px-4 py-2 rounded\"\r\n//         >\r\n//           Upload Content\r\n//         </button>\r\n//       </form>\r\n//     </div></div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// 'use client';\r\n\r\n// import { useState } from \"react\";\r\n// import { addDoc, collection } from \"firebase/firestore\";\r\n// import { db } from \"@/lib/firebase\";\r\n\r\n// export default function AdminPage() {\r\n//   const [product, setProduct] = useState({\r\n//     title: \"\",\r\n//     author: \"\",\r\n//     description: \"\",\r\n//     imageUrl: \"\",\r\n//     pdfUrl: \"\",\r\n//   });\r\n\r\n//   const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n//     setProduct({ ...product, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e: React.FormEvent) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await addDoc(collection(db, \"books\"), product);\r\n//       alert(\"Book content added successfully!\");\r\n//       setProduct({\r\n//         title: \"\",\r\n//         author: \"\",\r\n//         description: \"\",\r\n//         imageUrl: \"\",\r\n//         pdfUrl: \"\",\r\n//       });\r\n//     } catch (error) {\r\n//       console.error(\"Error adding book:\", error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"sm:p-32 p-6\">\r\n//       <div className=\"bg-white p-8 max-w-xl mx-auto shadow-lg rounded-md\">\r\n//         <h1 className=\"text-2xl font-bold mb-4\">Add New Book</h1>\r\n//         <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n//           {[\"title\", \"author\", \"description\", \"imageUrl\", \"pdfUrl\"].map((field) => (\r\n//             <input\r\n//               key={field}\r\n//               name={field}\r\n//               placeholder={field}\r\n//               value={product[field as keyof typeof product]}\r\n//               onChange={handleChange}\r\n//               className=\"block w-full p-2 border rounded text-black\"\r\n//               required\r\n//             />\r\n//           ))}\r\n//           <button\r\n//             type=\"submit\"\r\n//             className=\"bg-blue-600 text-white px-4 py-2 rounded\"\r\n//           >\r\n//             Upload Book\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// 'use client';\r\n\r\n// import { useState } from \"react\";\r\n// import { addDoc, collection } from \"firebase/firestore\";\r\n// import { db } from \"@/lib/firebase\";\r\n// import {\r\n//   Card,\r\n//   CardHeader,\r\n//   CardTitle,\r\n//   CardDescription,\r\n//   CardContent,\r\n// } from \"@/components/ui/card\";\r\n// import { Label } from \"@/components/ui/label\";\r\n// import { Input } from \"@/components/ui/input\";\r\n// import { Button } from \"@/components/ui/button\";\r\n// import { toast } from \"sonner\";\r\n\r\n// export default function AddBookForm() {\r\n//   const [book, setBook] = useState({\r\n//     title: \"\",\r\n//     author: \"\",\r\n//     description: \"\",\r\n//     imageUrl: \"\",\r\n//     pdfUrl: \"\",\r\n//   });\r\n\r\n//   const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n//     setBook({ ...book, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e: React.FormEvent) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await addDoc(collection(db, \"books\"), book);\r\n//       toast.success(\"Book added successfully!\");\r\n//       setBook({\r\n//         title: \"\",\r\n//         author: \"\",\r\n//         description: \"\",\r\n//         imageUrl: \"\",\r\n//         pdfUrl: \"\",\r\n//       });\r\n//     } catch (error) {\r\n//       toast.error(\"Failed to add book\");\r\n//       console.error(\"Firestore error:\", error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"max-w-2xl mx-auto px-4 sm:px-6 py-10\">\r\n//       <Card className=\"shadow-md border\">\r\n//         <CardHeader>\r\n//           <CardTitle className=\"text-xl\">📚 Add New Book</CardTitle>\r\n//           <CardDescription>\r\n//             Fill in the book details to upload it to the Firebase database.\r\n//           </CardDescription>\r\n//         </CardHeader>\r\n\r\n//         <CardContent>\r\n//           <form onSubmit={handleSubmit} className=\"space-y-5\">\r\n//             {[\r\n//               { label: \"Title\", name: \"title\", type: \"text\" },\r\n//               { label: \"Author\", name: \"author\", type: \"text\" },\r\n//               { label: \"Description\", name: \"description\", type: \"text\" },\r\n//               { label: \"Image URL\", name: \"imageUrl\", type: \"url\" },\r\n//               { label: \"PDF URL\", name: \"pdfUrl\", type: \"url\" },\r\n//             ].map(({ label, name, type }) => (\r\n//               <div key={name} className=\"grid w-full gap-1.5\">\r\n//                 <Label htmlFor={name}>{label}</Label>\r\n//                 <Input\r\n//                   id={name}\r\n//                   name={name}\r\n//                   type={type}\r\n//                   placeholder={`Enter ${label.toLowerCase()}`}\r\n//                   value={book[name as keyof typeof book]}\r\n//                   onChange={handleChange}\r\n//                   required\r\n//                 />\r\n//               </div>\r\n              \r\n//             ))}\r\n\r\n//             <Button type=\"submit\" className=\"w-full\">\r\n//               Upload Book\r\n//             </Button>\r\n//           </form>\r\n//         </CardContent>\r\n//       </Card>\r\n      \r\n//     </div>\r\n//   );\r\n// }\r\n// \r\n\r\n// 'use client';\r\n\r\n// import { useEffect, useState } from \"react\";\r\n// import { toast } from \"sonner\";\r\n// import {\r\n//   Card, CardHeader, CardTitle, CardDescription, CardContent,\r\n// } from \"@/components/ui/card\";\r\n// import { Label } from \"@/components/ui/label\";\r\n// import { Input } from \"@/components/ui/input\";\r\n// import { Button } from \"@/components/ui/button\";\r\n\r\n// type Book = {\r\n//   _id?: string;\r\n//   title: string;\r\n//   author: string;\r\n//   description: string;\r\n//   imageUrl: string;\r\n//   pdfUrl: string;\r\n// };\r\n\r\n// export default function AdminDashboard() {\r\n//   const [book, setBook] = useState<Book>({\r\n//     title: \"\",\r\n//     author: \"\",\r\n//     description: \"\",\r\n//     imageUrl: \"\",\r\n//     pdfUrl: \"\",\r\n//   });\r\n\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [books, setBooks] = useState<Book[]>([]);\r\n\r\n//   const fetchBooks = async () => {\r\n//     try {\r\n//       const res = await fetch(\"/api/booklibrary\");\r\n//       const data = await res.json();\r\n\r\n//       if (!res.ok) {\r\n//         throw new Error(data.message || \"Failed to fetch\");\r\n//       }\r\n\r\n//       if (Array.isArray(data)) {\r\n//         setBooks(data.reverse());\r\n//       } else {\r\n//         toast.error(\"❌ Unexpected data format received\");\r\n//         console.error(\"Unexpected data:\", data);\r\n//       }\r\n//     } catch (err) {\r\n//       toast.error(\"⚠️ Error fetching books\");\r\n//       console.error(err);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchBooks();\r\n//   }, []);\r\n\r\n//   const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n//     setBook({ ...book, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e: React.FormEvent) => {\r\n//     e.preventDefault();\r\n//     setLoading(true);\r\n//     try {\r\n//       const res = await fetch(\"/api/booklibrary\", {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify(book),\r\n//       });\r\n\r\n//       if (res.ok) {\r\n//         toast.success(\"📘 Book added successfully!\");\r\n//         setBook({\r\n//           title: \"\",\r\n//           author: \"\",\r\n//           description: \"\",\r\n//           imageUrl: \"\",\r\n//           pdfUrl: \"\",\r\n//         });\r\n//         fetchBooks(); // refresh list\r\n//       } else {\r\n//         toast.error(\"Failed to add book\");\r\n//       }\r\n//     } catch (err) {\r\n//       toast.error(\"Something went wrong: \" + (err as Error).message);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"max-w-2xl mx-auto px-4 py-10 space-y-10\">\r\n//       {/* Form */}\r\n//       <Card className=\"shadow-md border\">\r\n//         <CardHeader>\r\n//           <CardTitle>📚 Add New Book</CardTitle>\r\n//           <CardDescription>Add book to MongoDB</CardDescription>\r\n//         </CardHeader>\r\n//         <CardContent>\r\n//           <form onSubmit={handleSubmit} className=\"space-y-5\">\r\n//           {[\r\n//   { label: \"Title\", name: \"title\", type: \"text\" },\r\n//   { label: \"Author\", name: \"author\", type: \"text\" },\r\n//   { label: \"Description\", name: \"description\", type: \"text\" },\r\n//   { label: \"PDF URL\", name: \"pdfUrl\", type: \"text\" },        // ✅ changed\r\n//   { label: \"Image URL\", name: \"imageUrl\", type: \"text\" },    // ✅ changed\r\n// ].map(({ label, name, type }) => (\r\n//   <div key={name} className=\"grid w-full gap-1.5\">\r\n//     <Label htmlFor={name}>{label}</Label>\r\n//     <Input\r\n//       id={name}\r\n//       name={name}\r\n//       type={type}\r\n//       value={book[name as keyof Book]}\r\n//       onChange={handleChange}\r\n//       required\r\n//     />\r\n//   </div>\r\n// ))}\r\n\r\n//             <Button type=\"submit\" disabled={loading} className=\"w-full\">\r\n//               {loading ? \"Uploading...\" : \"Upload Book\"}\r\n//             </Button>\r\n//           </form>\r\n//         </CardContent>\r\n//       </Card>\r\n\r\n//       {/* Book List */}\r\n//       <div className=\"space-y-5\">\r\n//         <h2 className=\"text-xl font-bold\">📖 All Books</h2>\r\n//         {books.map((b) => (\r\n//           <Card key={b._id} className=\"p-4 border\">\r\n//             <p><strong>Title:</strong> {b.title}</p>\r\n//             <p><strong>Author:</strong> {b.author}</p>\r\n//             <p><strong>Description:</strong> {b.description}</p>\r\n//             <a href={b.pdfUrl} className=\"text-blue-600 underline\" target=\"_blank\">📄 PDF</a>\r\n\r\n//             {b.imageUrl && (\r\n//               <img\r\n//                 src={b.imageUrl}\r\n//                 alt=\"Book Image\"\r\n//                 className=\"w-32 h-auto rounded-md shadow-md mt-2\"\r\n//               />\r\n//             )}\r\n//           </Card>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// 'use client';\r\n\r\n// import { useEffect, useState } from \"react\";\r\n// import { toast } from \"sonner\";\r\n// import {\r\n//   Card, CardHeader, CardTitle, CardDescription, CardContent,\r\n// } from \"@/components/ui/card\";\r\n// import { Label } from \"@/components/ui/label\";\r\n// import { Input } from \"@/components/ui/input\";\r\n// import { Button } from \"@/components/ui/button\";\r\n// import { BookOpen, Plus, Library, Trash2 } from \"lucide-react\";\r\n\r\n// type Book = {\r\n//   _id?: string;\r\n//   title: string;\r\n//   author: string;\r\n//   description: string;\r\n//   imageUrl: string;\r\n//   pdfUrl: string;\r\n//   promoImageUrl?: string;\r\n//   isFeatured: boolean;\r\n// };\r\n\r\n// export default function AdminDashboard() {\r\n//   const [book, setBook] = useState<any>({\r\n//     type: \"book\",\r\n//     title: \"\",\r\n//     author: \"\",\r\n//     description: \"\",\r\n//     imageUrl: \"\",\r\n//     pdfUrl: \"\",\r\n//     promoImageUrl: \"\",\r\n//     isFeatured: false,\r\n//   });\r\n\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [books, setBooks] = useState<Book[]>([]);\r\n\r\n//   const fetchBooks = async () => {\r\n//     try {\r\n//       const res = await fetch(\"/api/booklibrary\");\r\n//       const data = await res.json();\r\n\r\n//       if (!res.ok) throw new Error(data.message || \"Failed to fetch\");\r\n//       if (Array.isArray(data)) setBooks(data.reverse());\r\n//       else toast.error(\"❌ Unexpected data format\");\r\n//     } catch (err) {\r\n//       toast.error(\"⚠️ Error fetching books\");\r\n//       console.error(err);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchBooks();\r\n//   }, []);\r\n\r\n//   const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n//     setBook({ ...book, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleDelete = async (id: string) => {\r\n//     try {\r\n//       await fetch(`/api/booklibrary?id=${id}`, {\r\n//         method: \"DELETE\",\r\n//       });\r\n//       toast.success(\"Book deleted successfully\");\r\n//       fetchBooks();\r\n//     } catch (error) {\r\n//       toast.error(\"Something went wrong\");\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (e: React.FormEvent) => {\r\n//     e.preventDefault();\r\n//     setLoading(true);\r\n\r\n//     const isImageOnly = book.type === \"image\";\r\n\r\n//     // Basic validation\r\n//     if (isImageOnly && !book.promoImageUrl) {\r\n//       toast.error(\"⚠️ Promo Image URL required for image type\");\r\n//       setLoading(false);\r\n//       return;\r\n//     }\r\n//     if (!isImageOnly && (!book.title || !book.author || !book.imageUrl || !book.pdfUrl)) {\r\n//       toast.error(\"⚠️ Please fill all required book fields\");\r\n//       setLoading(false);\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const res = await fetch(\"http://localhost:3000/api/booklibrary\", {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify(book),\r\n//       });\r\n\r\n//       if (res.ok) {\r\n//         toast.success(\"✅ Added successfully!\");\r\n//         setBook({\r\n//           type: \"book\",\r\n//           title: \"\",\r\n//           author: \"\",\r\n//           description: \"\",\r\n//           imageUrl: \"\",\r\n//           pdfUrl: \"\",\r\n//           promoImageUrl: \"\",\r\n//           isFeatured: false,\r\n//         });\r\n//         fetchBooks();\r\n//       } else {\r\n//         toast.error(\"❌ Failed to add\");\r\n//       }\r\n//     } catch (err) {\r\n//       toast.error(\"❌ Something went wrong\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"flex min-h-screen bg-gray-100\">\r\n//       {/* Sidebar */}\r\n//       <aside className=\"w-64 bg-gradient-to-br from-slate-900 via-blue-900 to-purple-900 text-white border-r p-6 space-y-6 shadow-sm\">\r\n//         <h2 className=\"text-xl font-bold flex items-center gap-2\">\r\n//           <Library className=\"w-5 h-5\" /> Admin Panel\r\n//         </h2>\r\n//         <nav className=\"space-y-3\">\r\n//           <button className=\"flex items-center gap-2 text-white font-medium hover:text-black\">\r\n//             <Plus className=\"w-4 h-4\" /> Add Book\r\n//           </button>\r\n//           <button className=\"flex items-center gap-2 text-white font-medium hover:text-black\">\r\n//             <BookOpen className=\"w-4 h-4\" /> View Books\r\n//           </button>\r\n//         </nav>\r\n//       </aside>\r\n\r\n//       {/* Main Content */}\r\n//       <main className=\"flex-1 p-10 overflow-y-auto space-y-10\">\r\n//         <div>\r\n//           <h1 className=\"text-3xl font-bold\">📚 Manage Library</h1>\r\n//           <p className=\"text-muted-foreground\">Add and manage your digital books here.</p>\r\n//         </div>\r\n\r\n//         {/* Form Section */}\r\n//         <Card>\r\n//           <CardHeader>\r\n//             <CardTitle>Add New Book / Promo Image</CardTitle>\r\n//             <CardDescription>Select type and enter related fields.</CardDescription>\r\n//           </CardHeader>\r\n//           <CardContent>\r\n//             <form onSubmit={handleSubmit} className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n//               {/* Type Selector */}\r\n//               <div className=\"col-span-full\">\r\n//                 <Label htmlFor=\"type\">Select Type</Label>\r\n//                 <select\r\n//                   name=\"type\"\r\n//                   id=\"type\"\r\n//                   className=\"border rounded p-2 w-full\"\r\n//                   value={book.type}\r\n//                   onChange={handleChange}\r\n//                 >\r\n//                   <option value=\"book\">📖 Book</option>\r\n//                   <option value=\"image\">🖼️ Promo Image</option>\r\n//                 </select>\r\n//               </div>\r\n\r\n//               {/* Show only if type === 'book' */}\r\n//               {book.type === \"book\" && (\r\n//                 <>\r\n//                   <InputField name=\"title\" label=\"Title\" value={book.title} onChange={handleChange} required />\r\n//                   <InputField name=\"author\" label=\"Author\" value={book.author} onChange={handleChange} required />\r\n//                   <InputField name=\"description\" label=\"Description\" value={book.description} onChange={handleChange} />\r\n//                   <InputField name=\"imageUrl\" label=\"Image URL\" value={book.imageUrl} onChange={handleChange} required />\r\n//                   <InputField name=\"pdfUrl\" label=\"PDF URL\" value={book.pdfUrl} onChange={handleChange} required />\r\n//                 </>\r\n//               )}\r\n\r\n//               {/* Always show for both types */}\r\n//               <InputField name=\"promoImageUrl\" label=\"Promo Image URL\" value={book.promoImageUrl} onChange={handleChange} required={book.type === \"image\"} />\r\n\r\n//               <div className=\"col-span-full\">\r\n//                 <Label htmlFor=\"isFeatured\">Show on Home Page?</Label>\r\n//                 <div className=\"flex items-center gap-2\">\r\n//                   <input\r\n//                     type=\"checkbox\"\r\n//                     id=\"isFeatured\"\r\n//                     name=\"isFeatured\"\r\n//                     checked={book.isFeatured}\r\n//                     onChange={(e) => setBook({ ...book, isFeatured: e.target.checked })}\r\n//                   />\r\n//                   <span className=\"text-sm text-gray-700\">Yes, display on homepage</span>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               <div className=\"col-span-full\">\r\n//                 <Button type=\"submit\" disabled={loading} className=\"w-full bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white px-8 py-4 text-lg rounded-2xl shadow-xl\">\r\n//                   {loading ? \"Uploading...\" : \"Submit\"}\r\n//                 </Button>\r\n//               </div>\r\n//             </form>\r\n//           </CardContent>\r\n//         </Card>\r\n\r\n//         {/* Book List */}\r\n//         <section className=\"space-y-4\">\r\n//           <h2 className=\"text-2xl font-bold\">📖 All Entries</h2>\r\n//           {books.length === 0 ? (\r\n//             <p className=\"text-muted-foreground\">No entries yet.</p>\r\n//           ) : (\r\n//             <div className=\"grid md:grid-cols-2 gap-4\">\r\n//               {books.map((b) => (\r\n//                 <Card key={b._id} className=\"p-4\">\r\n//                   <div className=\"flex gap-4\">\r\n//                     {b.imageUrl && (\r\n//                       <img\r\n//                         src={b.imageUrl}\r\n//                         alt={b.title}\r\n//                         className=\"w-24 h-auto rounded-md border\"\r\n//                       />\r\n//                     )}\r\n//                     <div className=\"flex-1 space-y-1\">\r\n//                       <h3 className=\"font-semibold text-lg\">{b.title}</h3>\r\n//                       <p className=\"text-sm\">👤 {b.author}</p>\r\n//                       <p className=\"text-sm text-muted-foreground\">{b.description}</p>\r\n//                       {b.pdfUrl && (\r\n//                         <a\r\n//                           href={b.pdfUrl}\r\n//                           target=\"_blank\"\r\n//                           className=\"text-blue-600 underline text-sm\"\r\n//                         >\r\n//                           📄 View PDF\r\n//                         </a>\r\n//                       )}\r\n//                     </div>\r\n//                   </div>\r\n//                   <Button\r\n//                     variant=\"destructive\"\r\n//                     onClick={() => b._id && handleDelete(b._id)}\r\n//                   >\r\n//                     Delete\r\n//                   </Button>\r\n//                 </Card>\r\n//               ))}\r\n//             </div>\r\n//           )}\r\n//         </section>\r\n//       </main>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// // 👇 Custom InputField component for reuse\r\n// function InputField({ name, label, value, onChange, required = false }: {\r\n//   name: string;\r\n//   label: string;\r\n//   value: string;\r\n//   onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n//   required?: boolean;\r\n// }) {\r\n//   return (\r\n//     <div className=\"grid gap-1.5\">\r\n//       <Label htmlFor={name}>{label}</Label>\r\n//       <Input\r\n//         id={name}\r\n//         name={name}\r\n//         value={value}\r\n//         onChange={onChange}\r\n//         required={required}\r\n//         placeholder={`Enter ${label.toLowerCase()}`}\r\n//       />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n// \"use client\"\r\n\r\n\r\n\r\n// import type React from \"react\"\r\n\r\n// import { useEffect, useState } from \"react\"\r\n// import { toast } from \"sonner\"\r\n// import { Card, CardHeader, CardTitle, CardDescription, CardContent } from \"@/components/ui/card\"\r\n// import { Label } from \"@/components/ui/label\"\r\n// import { Input } from \"@/components/ui/input\"\r\n// import { Button } from \"@/components/ui/button\"\r\n// import { Badge } from \"@/components/ui/badge\"\r\n// import {\r\n//   BookOpen,\r\n//   Plus,\r\n//   Library,\r\n//   Trash2,\r\n//   Upload,\r\n//   Eye,\r\n//   Star,\r\n//   ImageIcon,\r\n//   FileText,\r\n//   Users,\r\n//   Search,\r\n//   Edit,\r\n//   X,\r\n//   Save,\r\n// } from \"lucide-react\"\r\n\r\n// type Book = {\r\n//   _id?: string\r\n//   title: string\r\n//   author: string\r\n//   description: string\r\n//   imageUrl: string\r\n//   pdfUrl: string\r\n//   promoImageUrl?: string\r\n//   isFeatured: boolean\r\n//   contentType: \"book\" | \"image\" // Updated to contentType\r\n// }\r\n\r\n// export default function Dashboard() {\r\n//   const [book, setBook] = useState<any>({\r\n//     contentType: \"book\", // Default contentType\r\n//     title: \"\",\r\n//     author: \"\",\r\n//     description: \"\",\r\n//     imageUrl: \"\",\r\n//     pdfUrl: \"\",\r\n//     promoImageUrl: \"\",\r\n//     isFeatured: false,\r\n//   })\r\n\r\n//   const [loading, setLoading] = useState(false)\r\n//   const [books, setBooks] = useState<Book[]>([])\r\n//   const [activeTab, setActiveTab] = useState<\"add\" | \"view\">(\"add\")\r\n//   const [searchTerm, setSearchTerm] = useState(\"\")\r\n//   const [editingBook, setEditingBook] = useState<Book | null>(null)\r\n//   const [isEditMode, setIsEditMode] = useState(false)\r\n\r\n//   const fetchBooks = async () => {\r\n//     try {\r\n//       const res = await fetch(\"/api/booklibrary\")\r\n//       const data = await res.json()\r\n//       if (!res.ok) throw new Error(data.message || \"Failed to fetch\")\r\n//       if (Array.isArray(data)) setBooks(data.reverse())\r\n//       else toast.error(\"❌ Unexpected data format\")\r\n//     } catch (err) {\r\n//       toast.error(\"⚠️ Error fetching books\")\r\n//       console.error(err)\r\n//     }\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     fetchBooks()\r\n//   }, [])\r\n\r\n//   const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n//     const { name, value } = e.target\r\n\r\n//     const updateState = (prevState: any) => {\r\n//       if (name === \"contentType\") {\r\n//         const newType = value as \"book\" | \"image\"\r\n//         const newState = { ...prevState, contentType: newType }\r\n//         // Clear irrelevant fields based on new type\r\n//         if (newType === \"image\") {\r\n//           newState.title = \"\"\r\n//           newState.author = \"\"\r\n//           newState.description = \"\"\r\n//           newState.imageUrl = \"\"\r\n//           newState.pdfUrl = \"\"\r\n//         } else {\r\n//           // newType === \"book\"\r\n//           newState.promoImageUrl = \"\"\r\n//         }\r\n//         return newState\r\n//       } else {\r\n//         return { ...prevState, [name]: value }\r\n//       }\r\n//     }\r\n\r\n//     if (isEditMode && editingBook) {\r\n//       setEditingBook(updateState(editingBook))\r\n//     } else {\r\n//       setBook(updateState(book))\r\n//     }\r\n//   }\r\n\r\n//   const handleCheckboxChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n//     const { name, checked } = e.target\r\n//     if (isEditMode && editingBook) {\r\n//       setEditingBook({ ...editingBook, [name]: checked })\r\n//     } else {\r\n//       setBook({ ...book, [name]: checked })\r\n//     }\r\n//   }\r\n\r\n//   const handleDelete = async (id: string) => {\r\n//     if (!confirm(\"Are you sure you want to delete this entry?\")) return\r\n\r\n//     try {\r\n//       await fetch(`/api/booklibrary?id=${id}`, {\r\n//         method: \"DELETE\",\r\n//       })\r\n//       toast.success(\"✅ Entry deleted successfully\")\r\n//       fetchBooks()\r\n//     } catch (error) {\r\n//       toast.error(\"❌ Something went wrong\")\r\n//     }\r\n//   }\r\n\r\n//   const handleEdit = (bookToEdit: Book) => {\r\n//     setEditingBook(bookToEdit)\r\n//     setIsEditMode(true)\r\n//     setActiveTab(\"add\")\r\n//     toast.info(\"📝 Edit mode activated\")\r\n//   }\r\n\r\n//   const handleCancelEdit = () => {\r\n//     setEditingBook(null)\r\n//     setIsEditMode(false)\r\n//     setBook({\r\n//       contentType: \"book\",\r\n//       title: \"\",\r\n//       author: \"\",\r\n//       description: \"\",\r\n//       imageUrl: \"\",\r\n//       pdfUrl: \"\",\r\n//       promoImageUrl: \"\",\r\n//       isFeatured: false,\r\n//     })\r\n//     setActiveTab(\"view\") // Go back to view tab after cancelling edit\r\n//     toast.info(\"❌ Edit cancelled\")\r\n//   }\r\n\r\n//   const handleUpdate = async (e: React.FormEvent) => {\r\n//     e.preventDefault()\r\n//     if (!editingBook || !editingBook._id) return\r\n\r\n//     setLoading(true)\r\n\r\n//     // Basic validation for edit mode\r\n//     if (editingBook.contentType === \"image\" && !editingBook.promoImageUrl) {\r\n//       toast.error(\"⚠️ Promo Image URL required for image type\")\r\n//       setLoading(false)\r\n//       return\r\n//     }\r\n//     if (\r\n//       editingBook.contentType === \"book\" &&\r\n//       (!editingBook.title || !editingBook.author || !editingBook.imageUrl || !editingBook.pdfUrl)\r\n//     ) {\r\n//       toast.error(\"⚠️ Please fill all required book fields\")\r\n//       setLoading(false)\r\n//       return\r\n//     }\r\n\r\n//     try {\r\n//       const res = await fetch(`/api/booklibrary?id=${editingBook._id}`, {\r\n//         method: \"PUT\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify(editingBook),\r\n//       })\r\n\r\n//       if (res.ok) {\r\n//         toast.success(\"✅ Entry updated successfully!\")\r\n//         handleCancelEdit()\r\n//         fetchBooks()\r\n//         setActiveTab(\"view\")\r\n//       } else {\r\n//         toast.error(\"❌ Failed to update entry\")\r\n//       }\r\n//     } catch (err) {\r\n//       toast.error(\"❌ Something went wrong\")\r\n//     } finally {\r\n//       setLoading(false)\r\n//     }\r\n//   }\r\n\r\n//   const handleSubmit = async (e: React.FormEvent) => {\r\n//     e.preventDefault()\r\n\r\n//     if (isEditMode) {\r\n//       return handleUpdate(e)\r\n//     }\r\n\r\n//     setLoading(true)\r\n//     const isImageOnly = book.contentType === \"image\"\r\n\r\n//     // Basic validation for add mode\r\n//     if (isImageOnly && !book.promoImageUrl) {\r\n//       toast.error(\"⚠️ Promo Image URL required for image type\")\r\n//       setLoading(false)\r\n//       return\r\n//     }\r\n\r\n//     if (!isImageOnly && (!book.title || !book.author || !book.imageUrl || !book.pdfUrl)) {\r\n//       toast.error(\"⚠️ Please fill all required book fields\")\r\n//       setLoading(false)\r\n//       return\r\n//     }\r\n\r\n//     try {\r\n//       const res = await fetch(\"http://localhost:3000/api/booklibrary\", {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify(book),\r\n//       })\r\n\r\n//       if (res.ok) {\r\n//         toast.success(\"✅ Added successfully!\")\r\n//         setBook({\r\n//           contentType: \"book\",\r\n//           title: \"\",\r\n//           author: \"\",\r\n//           description: \"\",\r\n//           imageUrl: \"\",\r\n//           pdfUrl: \"\",\r\n//           promoImageUrl: \"\",\r\n//           isFeatured: false,\r\n//         })\r\n//         fetchBooks()\r\n//         setActiveTab(\"view\")\r\n//       } else {\r\n//         toast.error(\"❌ Failed to add\")\r\n//       }\r\n//     } catch (err) {\r\n//       toast.error(\"❌ Something went wrong\")\r\n//     } finally {\r\n//       setLoading(false)\r\n//     }\r\n//   }\r\n\r\n//   const filteredBooks = books.filter(\r\n//     (book) =>\r\n//       (book.title?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n//         book.author?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n//         (book.contentType === \"image\" && book.promoImageUrl?.toLowerCase().includes(searchTerm.toLowerCase()))) ??\r\n//       false,\r\n//   )\r\n\r\n//   const stats = {\r\n//     total: books.length,\r\n//     featured: books.filter((b) => b.isFeatured).length,\r\n//     regular: books.filter((b) => !b.isFeatured).length,\r\n//   }\r\n\r\n//   const currentFormData = isEditMode ? editingBook : book\r\n\r\n//   return (\r\n//     <div className=\"flex min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 font-sans\">\r\n//       {/* Enhanced Sidebar */}\r\n//       <aside className=\"w-72 bg-white shadow-xl border-r border-slate-200 flex flex-col\">\r\n//         <div className=\"p-6 border-b border-slate-200\">\r\n//           <div className=\"flex items-center gap-3 mb-6\">\r\n//             <div className=\"p-2 bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg shadow-md\">\r\n//               <Library className=\"w-6 h-6 text-white\" />\r\n//             </div>\r\n//             <div>\r\n//               <h2 className=\"text-xl font-bold text-slate-800\">Admin Panel</h2>\r\n//               <p className=\"text-sm text-slate-500\">Book Management</p>\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Edit Mode Indicator */}\r\n//           {isEditMode && (\r\n//             <div className=\"bg-gradient-to-r from-orange-500 to-red-500 p-4 rounded-lg text-white mb-4 shadow-md\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <div>\r\n//                   <p className=\"text-orange-100 text-sm\">Editing Mode</p>\r\n//                   <p className=\"font-bold truncate text-lg\">\r\n//                     {editingBook?.contentType === \"book\" ? editingBook?.title : \"Promo Image\"}\r\n//                   </p>\r\n//                 </div>\r\n//                 <Edit className=\"w-6 h-6 text-orange-200\" />\r\n//               </div>\r\n//             </div>\r\n//           )}\r\n\r\n//           {/* Stats Cards */}\r\n//           <div className=\"grid grid-cols-1 gap-3 mb-6\">\r\n//             <div className=\"bg-gradient-to-r from-blue-500 to-blue-600 p-4 rounded-lg text-white shadow-md\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <div>\r\n//                   <p className=\"text-blue-100 text-sm\">Total Entries</p>\r\n//                   <p className=\"text-2xl font-bold\">{stats.total}</p>\r\n//                 </div>\r\n//                 <BookOpen className=\"w-8 h-8 text-blue-200 opacity-70\" />\r\n//               </div>\r\n//             </div>\r\n\r\n//             <div className=\"bg-gradient-to-r from-purple-500 to-purple-600 p-4 rounded-lg text-white shadow-md\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <div>\r\n//                   <p className=\"text-purple-100 text-sm\">Featured</p>\r\n//                   <p className=\"text-2xl font-bold\">{stats.featured}</p>\r\n//                 </div>\r\n//                 <Star className=\"w-8 h-8 text-purple-200 opacity-70\" />\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Navigation */}\r\n//         <nav className=\"p-6 space-y-2 flex-1\">\r\n//           <button\r\n//             onClick={() => setActiveTab(\"add\")}\r\n//             className={`w-full flex items-center gap-3 px-4 py-3 rounded-lg transition-all duration-200 ${\r\n//               activeTab === \"add\"\r\n//                 ? \"bg-gradient-to-r from-blue-500 to-purple-600 text-white shadow-lg\"\r\n//                 : \"text-slate-600 hover:bg-slate-100\"\r\n//             }`}\r\n//           >\r\n//             {isEditMode ? <Edit className=\"w-5 h-5\" /> : <Plus className=\"w-5 h-5\" />}\r\n//             <span className=\"font-medium\">{isEditMode ? \"Edit Entry\" : \"Add New Entry\"}</span>\r\n//           </button>\r\n\r\n//           <button\r\n//             onClick={() => setActiveTab(\"view\")}\r\n//             className={`w-full flex items-center gap-3 px-4 py-3 rounded-lg transition-all duration-200 ${\r\n//               activeTab === \"view\"\r\n//                 ? \"bg-gradient-to-r from-blue-500 to-purple-600 text-white shadow-lg\"\r\n//                 : \"text-slate-600 hover:bg-slate-100\"\r\n//             }`}\r\n//           >\r\n//             <Eye className=\"w-5 h-5\" />\r\n//             <span className=\"font-medium\">View All Entries</span>\r\n//           </button>\r\n\r\n//           {isEditMode && (\r\n//             <button\r\n//               onClick={handleCancelEdit}\r\n//               className=\"w-full flex items-center gap-3 px-4 py-3 rounded-lg text-red-600 hover:bg-red-50 transition-all duration-200\"\r\n//             >\r\n//               <X className=\"w-5 h-5\" />\r\n//               <span className=\"font-medium\">Cancel Edit</span>\r\n//             </button>\r\n//           )}\r\n//         </nav>\r\n//         <div className=\"p-6 border-t border-slate-200 text-sm text-slate-500\">\r\n//           <p>&copy; {new Date().getFullYear()} Book Library. All rights reserved.</p>\r\n//         </div>\r\n//       </aside>\r\n\r\n//       {/* Main Content */}\r\n//       <main className=\"flex-1 overflow-y-auto\">\r\n//         {/* Header */}\r\n//         <header className=\"bg-white shadow-sm border-b border-slate-200 p-6\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <h1 className=\"text-3xl font-bold text-slate-800\">\r\n//                 {activeTab === \"add\" ? (isEditMode ? \"✏️ Edit Entry\" : \"📚 Add New Content\") : \"📖 Library Management\"}\r\n//               </h1>\r\n//               <p className=\"text-slate-600 mt-1\">\r\n//                 {activeTab === \"add\"\r\n//                   ? isEditMode\r\n//                     ? `Editing: ${editingBook?.contentType === \"book\" ? editingBook?.title : \"Promo Image\"}`\r\n//                     : \"Add books and promotional images to your library\"\r\n//                   : \"Manage your digital book collection\"}\r\n//               </p>\r\n//             </div>\r\n\r\n//             {activeTab === \"view\" && (\r\n//               <div className=\"flex items-center gap-4\">\r\n//                 <div className=\"relative\">\r\n//                   <Search className=\"w-4 h-4 absolute left-3 top-1/2 transform -translate-y-1/2 text-slate-400\" />\r\n//                   <Input\r\n//                     placeholder=\"Search entries...\"\r\n//                     value={searchTerm}\r\n//                     onChange={(e) => setSearchTerm(e.target.value)}\r\n//                     className=\"pl-10 w-64 border-slate-300 focus:ring-blue-500 focus:border-transparent\"\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         </header>\r\n\r\n//         <div className=\"p-6\">\r\n//           {activeTab === \"add\" ? (\r\n//             /* Add/Edit Form Section */\r\n//             <Card className=\"shadow-xl border-0 bg-white rounded-xl\">\r\n//               <CardHeader className=\"bg-gradient-to-r from-slate-50 to-blue-50 border-b rounded-t-xl p-6\">\r\n//                 <CardTitle className=\"flex items-center gap-3 text-2xl font-bold text-slate-800\">\r\n//                   {isEditMode ? <Edit className=\"w-6 h-6\" /> : <Upload className=\"w-6 h-6\" />}\r\n//                   {isEditMode ? \"Edit Entry Details\" : \"Add New Book / Promo Image\"}\r\n//                 </CardTitle>\r\n//                 <CardDescription className=\"text-slate-600\">\r\n//                   {isEditMode\r\n//                     ? \"Update the entry information below\"\r\n//                     : \"Choose the content type and fill in the required information\"}\r\n//                 </CardDescription>\r\n//               </CardHeader>\r\n\r\n//               <CardContent className=\"p-8\">\r\n//                 <form onSubmit={handleSubmit} className=\"space-y-8\">\r\n//                   {/* Type Selector - Only show in add mode */}\r\n//                   {!isEditMode && (\r\n//                     <div className=\"space-y-2\">\r\n//                       <Label htmlFor=\"contentType\" className=\"text-base font-semibold text-slate-700\">\r\n//                         Content Type\r\n//                       </Label>\r\n//                       <select\r\n//                         name=\"contentType\"\r\n//                         id=\"contentType\"\r\n//                         className=\"w-full border border-slate-300 rounded-lg p-3 bg-white focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all text-slate-700\"\r\n//                         value={book.contentType}\r\n//                         onChange={handleChange}\r\n//                       >\r\n//                         <option value=\"book\">📖 Complete Book</option>\r\n//                         <option value=\"image\">🖼️ Promotional Image Only</option>\r\n//                       </select>\r\n//                     </div>\r\n//                   )}\r\n\r\n//                   {/* Book Fields */}\r\n//                   {(isEditMode && currentFormData?.contentType === \"book\") ||\r\n//                   (!isEditMode && book.contentType === \"book\") ? (\r\n//                     <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n//                       <EnhancedInputField\r\n//                         name=\"title\"\r\n//                         label=\"Book Title\"\r\n//                         value={currentFormData?.title || \"\"}\r\n//                         onChange={handleChange}\r\n//                         required\r\n//                         icon={<BookOpen className=\"w-4 h-4 text-slate-500\" />}\r\n//                       />\r\n//                       <EnhancedInputField\r\n//                         name=\"author\"\r\n//                         label=\"Author Name\"\r\n//                         value={currentFormData?.author || \"\"}\r\n//                         onChange={handleChange}\r\n//                         required\r\n//                         icon={<Users className=\"w-4 h-4 text-slate-500\" />}\r\n//                       />\r\n//                       <div className=\"md:col-span-2\">\r\n//                         <EnhancedInputField\r\n//                           name=\"description\"\r\n//                           label=\"Description\"\r\n//                           value={currentFormData?.description || \"\"}\r\n//                           onChange={handleChange}\r\n//                           icon={<FileText className=\"w-4 h-4 text-slate-500\" />}\r\n//                         />\r\n//                       </div>\r\n//                       <EnhancedInputField\r\n//                         name=\"imageUrl\"\r\n//                         label=\"Cover Image URL\"\r\n//                         value={currentFormData?.imageUrl || \"\"}\r\n//                         onChange={handleChange}\r\n//                         required\r\n//                         icon={<ImageIcon className=\"w-4 h-4 text-slate-500\" />}\r\n//                       />\r\n//                       <EnhancedInputField\r\n//                         name=\"pdfUrl\"\r\n//                         label=\"PDF File URL\"\r\n//                         value={currentFormData?.pdfUrl || \"\"}\r\n//                         onChange={handleChange}\r\n//                         required\r\n//                         icon={<FileText className=\"w-4 h-4 text-slate-500\" />}\r\n//                       />\r\n//                     </div>\r\n//                   ) : null}\r\n\r\n//                   {/* Promo Image Field */}\r\n//                   {(isEditMode && currentFormData?.contentType === \"image\") ||\r\n//                   (!isEditMode && book.contentType === \"image\") ? (\r\n//                     <div className=\"space-y-2\">\r\n//                       <EnhancedInputField\r\n//                         name=\"promoImageUrl\"\r\n//                         label=\"Promotional Image URL\"\r\n//                         value={currentFormData?.promoImageUrl || \"\"}\r\n//                         onChange={handleChange}\r\n//                         required\r\n//                         icon={<ImageIcon className=\"w-4 h-4 text-slate-500\" />}\r\n//                       />\r\n//                     </div>\r\n//                   ) : null}\r\n\r\n//                   {/* Featured Toggle */}\r\n//                   <div className=\"flex items-center space-x-3 p-4 bg-slate-50 rounded-lg border border-slate-200 shadow-sm\">\r\n//                     <input\r\n//                       type=\"checkbox\"\r\n//                       id=\"isFeatured\"\r\n//                       name=\"isFeatured\"\r\n//                       checked={currentFormData?.isFeatured || false}\r\n//                       onChange={handleCheckboxChange}\r\n//                       className=\"w-5 h-5 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 focus:ring-offset-0 cursor-pointer\"\r\n//                     />\r\n//                     <div>\r\n//                       <Label htmlFor=\"isFeatured\" className=\"font-medium text-slate-700 cursor-pointer\">\r\n//                         Display on Homepage\r\n//                       </Label>\r\n//                       <p className=\"text-sm text-slate-600\">This content will be featured on the main page</p>\r\n//                     </div>\r\n//                   </div>\r\n\r\n//                   {/* Submit Button */}\r\n//                   <div className=\"flex flex-col sm:flex-row gap-4 pt-4\">\r\n//                     <Button\r\n//                       type=\"submit\"\r\n//                       disabled={loading}\r\n//                       className=\"flex-1 bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white py-3 text-lg rounded-xl shadow-lg hover:shadow-xl transition-all duration-200 font-semibold\"\r\n//                     >\r\n//                       {loading ? (\r\n//                         <div className=\"flex items-center gap-2\">\r\n//                           <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n//                           {isEditMode ? \"Updating...\" : \"Processing...\"}\r\n//                         </div>\r\n//                       ) : (\r\n//                         <div className=\"flex items-center gap-2\">\r\n//                           {isEditMode ? <Save className=\"w-5 h-5\" /> : <Upload className=\"w-5 h-5\" />}\r\n//                           {isEditMode ? \"Update Entry\" : \"Add to Library\"}\r\n//                         </div>\r\n//                       )}\r\n//                     </Button>\r\n\r\n//                     {isEditMode && (\r\n//                       <Button\r\n//                         type=\"button\"\r\n//                         variant=\"outline\"\r\n//                         onClick={handleCancelEdit}\r\n//                         className=\"flex-1 px-8 py-3 text-lg rounded-xl border-2 border-slate-300 bg-white text-slate-700 hover:bg-slate-50 hover:border-slate-400 transition-all duration-200 font-semibold\"\r\n//                       >\r\n//                         <X className=\"w-5 h-5 mr-2\" />\r\n//                         Cancel\r\n//                       </Button>\r\n//                     )}\r\n//                   </div>\r\n//                 </form>\r\n//               </CardContent>\r\n//             </Card>\r\n//           ) : (\r\n//             /* Books List Section */\r\n//             <div className=\"space-y-6\">\r\n//               {filteredBooks.length === 0 ? (\r\n//                 <Card className=\"p-12 text-center bg-white shadow-lg rounded-xl\">\r\n//                   <BookOpen className=\"w-16 h-16 text-slate-300 mx-auto mb-4\" />\r\n//                   <h3 className=\"text-xl font-semibold text-slate-600 mb-2\">No Entries Found</h3>\r\n//                   <p className=\"text-slate-500\">\r\n//                     {searchTerm\r\n//                       ? \"No entries match your search criteria.\"\r\n//                       : \"Start by adding your first entry to the library.\"}\r\n//                   </p>\r\n//                   {!searchTerm && (\r\n//                     <Button\r\n//                       onClick={() => setActiveTab(\"add\")}\r\n//                       className=\"mt-6 bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white py-3 px-6 rounded-xl shadow-md\"\r\n//                     >\r\n//                       <Plus className=\"w-4 h-4 mr-2\" />\r\n//                       Add First Entry\r\n//                     </Button>\r\n//                   )}\r\n//                 </Card>\r\n//               ) : (\r\n//                 <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n//                   {filteredBooks.map((b) => (\r\n//                     <Card\r\n//                       key={b._id}\r\n//                       className=\"overflow-hidden shadow-lg hover:shadow-xl transition-all duration-200 bg-white border-0 rounded-xl\"\r\n//                     >\r\n//                       <div className=\"relative\">\r\n//                         {/* Conditional Image Display */}\r\n//                         {b.contentType === \"image\" && b.promoImageUrl ? (\r\n//                           <div className=\"aspect-[3/4] overflow-hidden bg-slate-100\">\r\n//                             <img\r\n//                               src={b.promoImageUrl || \"/placeholder.svg\"} // Use promoImageUrl for contentType 'image'\r\n//                               alt=\"Promotional Image\"\r\n//                               className=\"w-full h-full object-cover hover:scale-105 transition-transform duration-200\"\r\n//                             />\r\n//                           </div>\r\n//                         ) : b.contentType === \"book\" && b.imageUrl ? (\r\n//                           <div className=\"aspect-[3/4] overflow-hidden bg-slate-100\">\r\n//                             <img\r\n//                               src={b.imageUrl || \"/placeholder.svg\"} // Use imageUrl for contentType 'book'\r\n//                               alt={b.title}\r\n//                               className=\"w-full h-full object-cover hover:scale-105 transition-transform duration-200\"\r\n//                             />\r\n//                           </div>\r\n//                         ) : (\r\n//                           // Fallback for no image or invalid contentType\r\n//                           <div className=\"aspect-[3/4] flex items-center justify-center bg-slate-100 text-slate-400\">\r\n//                             <ImageIcon className=\"w-12 h-12\" />\r\n//                           </div>\r\n//                         )}\r\n\r\n//                         {/* Type Badge */}\r\n//                         {b.contentType === \"image\" && (\r\n//                           <Badge className=\"absolute top-3 left-3 bg-blue-500 text-white text-sm px-3 py-1 rounded-full shadow-md\">\r\n//                             <ImageIcon className=\"w-3 h-3 mr-1\" />\r\n//                             Promo\r\n//                           </Badge>\r\n//                         )}\r\n//                         {b.isFeatured && (\r\n//                           <Badge className=\"absolute top-3 right-3 bg-gradient-to-r from-yellow-400 to-orange-500 text-white text-sm px-3 py-1 rounded-full shadow-md\">\r\n//                             <Star className=\"w-3 h-3 mr-1\" />\r\n//                             Featured\r\n//                           </Badge>\r\n//                         )}\r\n//                       </div>\r\n\r\n//                       <div className=\"p-6 space-y-3\">\r\n//                         {/* Conditional Title/Author/Description */}\r\n//                         {b.contentType === \"book\" ? (\r\n//                           <>\r\n//                             <div>\r\n//                               <h3 className=\"font-bold text-xl text-slate-800 line-clamp-2\">{b.title}</h3>\r\n//                               <p className=\"text-slate-600 flex items-center gap-1 text-sm mt-1\">\r\n//                                 <Users className=\"w-4 h-4 text-slate-500\" />\r\n//                                 {b.author}\r\n//                               </p>\r\n//                             </div>\r\n//                             {b.description && <p className=\"text-sm text-slate-500 line-clamp-3\">{b.description}</p>}\r\n//                           </>\r\n//                         ) : (\r\n//                           <div>\r\n//                             <h3 className=\"font-bold text-xl text-slate-800 line-clamp-2\">Promotional Image</h3>\r\n//                             <p className=\"text-slate-600 flex items-center gap-1 text-sm mt-1\">\r\n//                               <ImageIcon className=\"w-4 h-4 text-slate-500\" />\r\n//                               {b.promoImageUrl ? new URL(b.promoImageUrl).pathname.split(\"/\").pop() : \"No URL\"}\r\n//                             </p>\r\n//                           </div>\r\n//                         )}\r\n\r\n//                         <div className=\"flex items-center gap-2 pt-4 border-t border-slate-100\">\r\n//                           {/* Conditional PDF Button */}\r\n//                           {b.contentType === \"book\" && b.pdfUrl && (\r\n//                             <Button\r\n//                               variant=\"outline\"\r\n//                               size=\"sm\"\r\n//                               asChild\r\n//                               className=\"flex-1 bg-transparent border-slate-300 text-slate-700 hover:bg-slate-100\"\r\n//                             >\r\n//                               <a href={b.pdfUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n//                                 <FileText className=\"w-4 h-4 mr-1\" />\r\n//                                 PDF\r\n//                               </a>\r\n//                             </Button>\r\n//                           )}\r\n\r\n//                           <Button\r\n//                             variant=\"outline\"\r\n//                             size=\"sm\"\r\n//                             onClick={() => handleEdit(b)}\r\n//                             className=\"bg-blue-50 hover:bg-blue-100 text-blue-600 border-blue-200\"\r\n//                           >\r\n//                             <Edit className=\"w-4 h-4\" />\r\n//                           </Button>\r\n\r\n//                           <Button\r\n//                             variant=\"destructive\"\r\n//                             size=\"sm\"\r\n//                             onClick={() => b._id && handleDelete(b._id)}\r\n//                             className=\"bg-red-500 hover:bg-red-600\"\r\n//                           >\r\n//                             <Trash2 className=\"w-4 h-4\" />\r\n//                           </Button>\r\n//                         </div>\r\n//                       </div>\r\n//                     </Card>\r\n//                   ))}\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//       </main>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// // Enhanced Input Field Component\r\n// function EnhancedInputField({\r\n//   name,\r\n//   label,\r\n//   value,\r\n//   onChange,\r\n//   required = false,\r\n//   icon,\r\n// }: {\r\n//   name: string\r\n//   label: string\r\n//   value: string\r\n//   onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n//   required?: boolean\r\n//   icon?: React.ReactNode\r\n// }) {\r\n//   return (\r\n//     <div className=\"space-y-2\">\r\n//       <Label htmlFor={name} className=\"text-base font-semibold text-slate-700 flex items-center gap-2\">\r\n//         {icon}\r\n//         {label}\r\n//         {required && <span className=\"text-red-500\">*</span>}\r\n//       </Label>\r\n//       <Input\r\n//         id={name}\r\n//         name={name}\r\n//         value={value}\r\n//         onChange={onChange}\r\n//         required={required}\r\n//         placeholder={`Enter ${label.toLowerCase()}`}\r\n//         className=\"border-slate-300 focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all p-3 text-slate-800\"\r\n//       />\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// \"use client\";\r\n\r\n// import { useState, useCallback, useEffect } from \"react\";\r\n// import { toast } from \"sonner\";\r\n// import { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\n// import { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui/card\";\r\n// import { Input } from \"@/components/ui/input\";\r\n// import { Label } from \"@/components/ui/label\";\r\n// import { Button } from \"@/components/ui/button\";\r\n// import { Checkbox } from \"@/components/ui/checkbox\";\r\n// import { Trash2, Edit, ImageIcon, BookOpen } from \"lucide-react\";\r\n\r\n// // Interface for Books\r\n// interface Book {\r\n//   _id: string;\r\n//   title: string;\r\n//   author: string;\r\n//   description: string;\r\n//   imageUrl: string;\r\n//   pdfUrl: string;\r\n//   contentType: \"book\";\r\n// }\r\n\r\n// // Interface for Promos\r\n// interface Promo {\r\n//   _id: string;\r\n//   title: string;\r\n//   promoImageUrl: string;\r\n//   isFeatured: boolean;\r\n//   contentType: \"image\";\r\n// }\r\n\r\n// export default function AdminDashboard() {\r\n//   // State for Books\r\n//   const [books, setBooks] = useState<Book[]>([]);\r\n//   const [bookForm, setBookForm] = useState({\r\n//     title: \"\",\r\n//     author: \"\",\r\n//     description: \"\",\r\n//     imageUrl: \"\",\r\n//     pdfUrl: \"\",\r\n//   });\r\n//   const [editingBookId, setEditingBookId] = useState<string | null>(null);\r\n\r\n//   // State for Promos\r\n//   const [promos, setPromos] = useState<Promo[]>([]);\r\n//   const [promoForm, setPromoForm] = useState({\r\n//     title: \"\",\r\n//     promoImageUrl: \"\",\r\n//     isFeatured: false,\r\n//   });\r\n//   const [editingPromoId, setEditingPromoId] = useState<string | null>(null);\r\n//   const [promoImageFile, setPromoImageFile] = useState<File | null>(null);\r\n\r\n//   // Fetch Books\r\n//   const fetchBooks = useCallback(async () => {\r\n//     try {\r\n//       const res = await fetch(\"/api/booklibrary?\");\r\n//       if (!res.ok) throw new Error(\"Failed to fetch books\");\r\n//       const data = await res.json();\r\n//       setBooks(data.filter((item: Book) => item.contentType === \"book\"));\r\n//     } catch (err) {\r\n//       toast.error(\"⚠️ Error fetching books\");\r\n//       console.error(err);\r\n//     }\r\n//   }, []);\r\n\r\n//   // Fetch Promos\r\n//   const fetchPromos = useCallback(async () => {\r\n//     try {\r\n//       const res = await fetch(\"/api/booklibrary?purpose=promo\");\r\n//       if (!res.ok) throw new Error(\"Failed to fetch promos\");\r\n//       const data = await res.json();\r\n//       setPromos(data.filter((item: Promo) => item.contentType === \"image\"));\r\n//     } catch (err) {\r\n//       toast.error(\"⚠️ Error fetching promos\");\r\n//       console.error(err);\r\n//     }\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//   fetchBooks();\r\n//   fetchPromos();\r\n// }, [fetchBooks, fetchPromos]); // ✅\r\n\r\n//   // Handle Book Form Submission\r\n//   const handleBookSubmit = async (e: React.FormEvent) => {\r\n//     e.preventDefault();\r\n//     if (!bookForm.title || !bookForm.author || !bookForm.imageUrl || !bookForm.pdfUrl) {\r\n//       toast.error(\"⚠️ Please fill all required book fields\");\r\n//       return;\r\n//     }\r\n//     try {\r\n//       const method = editingBookId ? \"PUT\" : \"POST\";\r\n//       const url = editingBookId\r\n//         ? `/api/booklibrary?_id=${editingBookId}`\r\n//         : \"/api/booklibrary\";\r\n//       const res = await fetch(url, {\r\n//         method,\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify({ ...bookForm, contentType: \"book\" }),\r\n//       });\r\n//       if (!res.ok) throw new Error(\"Failed to save book\");\r\n//       toast.success(editingBookId ? \"✅ Book updated\" : \"✅ Book added\");\r\n//       setBookForm({ title: \"\", author: \"\", description: \"\", imageUrl: \"\", pdfUrl: \"\" });\r\n//       setEditingBookId(null);\r\n//       fetchBooks();\r\n//     } catch (err) {\r\n//       toast.error(\"⚠️ Error saving book\");\r\n//       console.error(err);\r\n//     }\r\n//   };\r\n\r\n//   // Handle Promo Form Submission\r\n//   const handlePromoSubmit = async (e: React.FormEvent) => {\r\n//     e.preventDefault();\r\n//     if (!promoForm.title || (!promoForm.promoImageUrl && !promoImageFile)) {\r\n//       toast.error(\"⚠️ Please provide a title and either an image file or URL\");\r\n//       return;\r\n//     }\r\n//   }\r\n  \r\n     \r\n\r\n//   // Handle Book Deletion\r\n//   const handleDeleteBook = async (id: string) => {\r\n//     try {\r\n//       const res = await fetch(`/api/booklibrary?_id=${id}`, { method: \"DELETE\" });\r\n//       if (!res.ok) throw new Error(\"Failed to delete book\");\r\n//       toast.success(\"✅ Book deleted\");\r\n//       fetchBooks();\r\n//     } catch (err) {\r\n//       toast.error(\"⚠️ Error deleting book\");\r\n//       console.error(err);\r\n//     }\r\n//   };\r\n  \r\n//   // Handle Promo Deletion\r\n//   const handleDeletePromo = async (id: string) => {\r\n//     try {\r\n//       const res = await fetch(`/api/booklibrary?_id=${id}`, { method: \"DELETE\" });\r\n//       if (!res.ok) throw new Error(\"Failed to delete promo\");\r\n//       toast.success(\"✅ Promo deleted\");\r\n//       fetchPromos();\r\n//     } catch (err) {\r\n//       toast.error(\"⚠️ Error deleting promo\");\r\n//       console.error(err);\r\n//     }\r\n//   };\r\n\r\n//   // Handle Book Edit\r\n//   const handleEditBook = (book: Book) => {\r\n//     setBookForm({\r\n//       title: book.title,\r\n//       author: book.author,\r\n//       description: book.description,\r\n//       imageUrl: book.imageUrl,\r\n//       pdfUrl: book.pdfUrl,\r\n//     });\r\n//     setEditingBookId(book._id);\r\n//   };\r\n\r\n//   // Handle Promo Edit\r\n//   const handleEditPromo = (promo: Promo) => {\r\n//     setPromoForm({\r\n//       title: promo.title,\r\n//       promoImageUrl: promo.promoImageUrl,\r\n//       isFeatured: promo.isFeatured,\r\n//     });\r\n//     setEditingPromoId(promo._id);\r\n//     setPromoImageFile(null);\r\n//   };\r\n  \r\n//   return (\r\n//     <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 p-6\">\r\n//       <header className=\"mb-8\">\r\n//         <h1 className=\"text-4xl font-bold text-slate-800\">Admin Dashboard</h1>\r\n//         <p className=\"text-slate-600 mt-2\">Manage books and promotional images for Noor-e-Kitab</p>\r\n//       </header>\r\n\r\n//       <Tabs defaultValue=\"books\" className=\"w-full\">\r\n//         <TabsList className=\"grid w-full grid-cols-2 bg-white rounded-xl p-1\">\r\n//           <TabsTrigger value=\"books\" className=\"rounded-lg py-2\">\r\n//             <BookOpen className=\"w-4 h-4 mr-2\" />\r\n//             Books\r\n//           </TabsTrigger>\r\n//           <TabsTrigger value=\"promos\" className=\"rounded-lg py-2\">\r\n//             <ImageIcon className=\"w-4 h-4 mr-2\" />\r\n//             Promos\r\n//           </TabsTrigger>\r\n//         </TabsList>\r\n\r\n//         {/* Books Tab */}\r\n//         <TabsContent value=\"books\">\r\n//           <Card className=\"bg-white shadow-lg rounded-xl\">\r\n//             <CardHeader>\r\n//               <CardTitle className=\"text-2xl font-semibold text-slate-700\">\r\n//                 {editingBookId ? \"Edit Book\" : \"Add New Book\"}\r\n//               </CardTitle>\r\n//             </CardHeader>\r\n//             <CardContent>\r\n//               <form onSubmit={handleBookSubmit} className=\"space-y-4\">\r\n//                 <div>\r\n//                   <Label htmlFor=\"bookTitle\">Book Title</Label>\r\n//                   <Input\r\n//                     id=\"bookTitle\"\r\n//                     value={bookForm.title}\r\n//                     onChange={(e) => setBookForm({ ...bookForm, title: e.target.value })}\r\n//                     placeholder=\"Enter book title\"\r\n//                     className=\"rounded-lg\"\r\n//                     required\r\n//                   />\r\n//                 </div>\r\n//                 <div>\r\n//                   <Label htmlFor=\"bookAuthor\">Author</Label>\r\n//                   <Input\r\n//                     id=\"bookAuthor\"\r\n//                     value={bookForm.author}\r\n//                     onChange={(e) => setBookForm({ ...bookForm, author: e.target.value })}\r\n//                     placeholder=\"Enter author name\"\r\n//                     className=\"rounded-lg\"\r\n//                     required\r\n//                   />\r\n//                 </div>\r\n//                 <div>\r\n//                   <Label htmlFor=\"bookDescription\">Description</Label>\r\n//                   <Input\r\n//                     id=\"bookDescription\"\r\n//                     value={bookForm.description}\r\n//                     onChange={(e) => setBookForm({ ...bookForm, description: e.target.value })}\r\n//                     placeholder=\"Enter book description\"\r\n//                     className=\"rounded-lg\"\r\n//                   />\r\n//                 </div>\r\n//                 <div>\r\n//                   <Label htmlFor=\"bookImageUrl\">Book Cover URL</Label>\r\n//                   <Input\r\n//                     id=\"bookImageUrl\"\r\n//                     value={bookForm.imageUrl}\r\n//                     onChange={(e) => setBookForm({ ...bookForm, imageUrl: e.target.value })}\r\n//                     placeholder=\"Enter book cover URL\"\r\n//                     className=\"rounded-lg\"\r\n//                     required\r\n//                   />\r\n//                 </div>\r\n//                 <div>\r\n//                   <Label htmlFor=\"bookPdfUrl\">PDF URL</Label>\r\n//                   <Input\r\n//                     id=\"bookPdfUrl\"\r\n//                     value={bookForm.pdfUrl}\r\n//                     onChange={(e) => setBookForm({ ...bookForm, pdfUrl: e.target.value })}\r\n//                     placeholder=\"Enter PDF URL\"\r\n//                     className=\"rounded-lg\"\r\n//                     required\r\n//                   />\r\n//                 </div>\r\n//                 <Button type=\"submit\" className=\"bg-blue-600 hover:bg-blue-700 text-white rounded-xl\">\r\n//                   {editingBookId ? \"Update Book\" : \"Add Book\"}\r\n//                 </Button>\r\n//                 {editingBookId && (\r\n//                   <Button\r\n//                     type=\"button\"\r\n//                     variant=\"outline\"\r\n//                     onClick={() => {\r\n//                       setBookForm({ title: \"\", author: \"\", description: \"\", imageUrl: \"\", pdfUrl: \"\" });\r\n//                       setEditingBookId(null);\r\n//                     }}\r\n//                     className=\"ml-2 rounded-lg\"\r\n//                   >\r\n//                     Cancel\r\n//                   </Button>\r\n//                 )}\r\n//               </form>\r\n//             </CardContent>\r\n//           </Card>\r\n\r\n//           <Card className=\"mt-6 bg-white shadow-lg rounded-xl\">\r\n//             <CardHeader>\r\n//               <CardTitle className=\"text-2xl font-semibold text-slate-700\">All Books</CardTitle>\r\n//             </CardHeader>\r\n//             <CardContent>\r\n//               {books.length === 0 ? (\r\n//                 <p className=\"text-slate-500\">No books available</p>\r\n//               ) : (\r\n//                 <ul className=\"space-y-4\">\r\n//                   {books.map((book) => (\r\n//                     <li key={book._id} className=\"flex items-center justify-between p-4 bg-slate-50 rounded-lg\">\r\n//                       <div>\r\n//                         <h3 className=\"font-bold text-slate-800\">{book.title}</h3>\r\n//                         <p className=\"text-sm text-slate-600\">Author: {book.author}</p>\r\n//                         <p className=\"text-sm text-slate-600\">Cover: {book.imageUrl}</p>\r\n//                       </div>\r\n//                       <div className=\"flex gap-2\">\r\n//                         <Button\r\n//                           variant=\"outline\"\r\n//                           size=\"sm\"\r\n//                           onClick={() => handleEditBook(book)}\r\n//                           className=\"rounded-lg\"\r\n//                         >\r\n//                           <Edit className=\"w-4 h-4 mr-1\" />\r\n//                           Edit\r\n//                         </Button>\r\n//                         <Button\r\n//                           variant=\"destructive\"\r\n//                           size=\"sm\"\r\n//                           onClick={() => handleDeleteBook(book._id)}\r\n//                           className=\"rounded-lg\"\r\n//                         >\r\n//                           <Trash2 className=\"w-4 h-4 mr-1\" />\r\n//                           Delete\r\n//                         </Button>\r\n//                       </div>\r\n//                     </li>\r\n//                   ))}\r\n//                 </ul>\r\n//               )}\r\n//             </CardContent>\r\n//           </Card>\r\n//         </TabsContent>\r\n\r\n//         {/* Promos Tab */}\r\n//         <TabsContent value=\"promos\">\r\n//           <Card className=\"bg-white shadow-lg rounded-xl\">\r\n//             <CardHeader>\r\n//               <CardTitle className=\"text-2xl font-semibold text-slate-700\">\r\n//                 {editingPromoId ? \"Edit Promotional Image\" : \"Add New Promotional Image\"}\r\n//               </CardTitle>\r\n//             </CardHeader>\r\n//             <CardContent>\r\n//               <form onSubmit={handlePromoSubmit} className=\"space-y-4\">\r\n//                 <div>\r\n//                   <Label htmlFor=\"promoTitle\">Promo Title</Label>\r\n//                   <Input\r\n//                     id=\"promoTitle\"\r\n//                     value={promoForm.title}\r\n//                     onChange={(e) => setPromoForm({ ...promoForm, title: e.target.value })}\r\n//                     placeholder=\"Enter promo title\"\r\n//                     className=\"rounded-lg\"\r\n//                     required\r\n//                   />\r\n//                 </div>\r\n//                 <div>\r\n//                   <Label htmlFor=\"promoImageFile\">Upload Image</Label>\r\n//                   <Input\r\n//                     id=\"promoImageFile\"\r\n//                     type=\"file\"\r\n//                     accept=\"image/*\"\r\n//                     onChange={(e) => setPromoImageFile(e.target.files?.[0] || null)}\r\n//                     className=\"rounded-lg\"\r\n//                   />\r\n//                 </div>\r\n//                 <div>\r\n//                   <Label htmlFor=\"promoImageUrl\">Or Enter Image URL</Label>\r\n//                   <Input\r\n//                     id=\"promoImageUrl\"\r\n//                     value={promoForm.promoImageUrl}\r\n//                     onChange={(e) => setPromoForm({ ...promoForm, promoImageUrl: e.target.value })}\r\n//                     placeholder=\"Enter promo image URL\"\r\n//                     className=\"rounded-lg\"\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"flex items-center space-x-2\">\r\n//                   <Checkbox\r\n//                     id=\"isFeatured\"\r\n//                     checked={promoForm.isFeatured}\r\n//                     onCheckedChange={(checked) => setPromoForm({ ...promoForm, isFeatured: !!checked })}\r\n//                   />\r\n//                   <Label htmlFor=\"isFeatured\">Display on Homepage</Label>\r\n//                 </div>\r\n//                 <Button type=\"submit\" className=\"bg-blue-600 hover:bg-blue-700 text-white rounded-xl\">\r\n//                   {editingPromoId ? \"Update Promo\" : \"Add Promo\"}\r\n//                 </Button>\r\n//                 {editingPromoId && (\r\n//                   <Button\r\n//                     type=\"button\"\r\n//                     variant=\"outline\"\r\n//                     onClick={() => {\r\n//                       setPromoForm({ title: \"\", promoImageUrl: \"\", isFeatured: false });\r\n//                       setPromoImageFile(null);\r\n//                       setEditingPromoId(null);\r\n//                     }}\r\n//                     className=\"ml-2 rounded-lg\"\r\n//                   >\r\n//                     Cancel\r\n//                   </Button>\r\n//                 )}\r\n//               </form>\r\n//             </CardContent>\r\n//           </Card>\r\n\r\n//           <Card className=\"mt-6 bg-white shadow-lg rounded-xl\">\r\n//             <CardHeader>\r\n//               <CardTitle className=\"text-2xl font-semibold text-slate-700\">All Promotional Images</CardTitle>\r\n//             </CardHeader>\r\n//             <CardContent>\r\n//               {promos.length === 0 ? (\r\n//                 <p className=\"text-slate-500\">No promotional images available</p>\r\n//               ) : (\r\n//                 <ul className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\r\n//                   {promos.map((promo) => (\r\n//                     <li key={promo._id} className=\"p-4 bg-slate-50 rounded-lg\">\r\n//                       <div className=\"relative aspect-[3/4] mb-2\">\r\n//                         <img\r\n//                           src={promo.promoImageUrl}\r\n//                           alt={promo.title}\r\n//                           className=\"w-full h-full object-cover rounded-lg\"\r\n//                           onError={() => toast.error(`⚠️ Failed to load image for ${promo.title}`)}\r\n//                         />\r\n//                         {promo.isFeatured && (\r\n//                           <span className=\"absolute top-2 right-2 bg-yellow-400 text-white text-xs px-2 py-1 rounded-full\">\r\n//                             Featured\r\n//                           </span>\r\n//                         )}\r\n//                       </div>\r\n//                       <h3 className=\"font-bold text-slate-800\">{promo.title}</h3>\r\n//                       <p className=\"text-sm text-slate-600 truncate\">{promo.promoImageUrl}</p>\r\n//                       <div className=\"flex gap-2 mt-2\">\r\n//                         <Button\r\n//                           variant=\"outline\"\r\n//                           size=\"sm\"\r\n//                           onClick={() => handleEditPromo(promo)}\r\n//                           className=\"rounded-lg\"\r\n//                         >\r\n//                           <Edit className=\"w-4 h-4 mr-1\" />\r\n//                           Edit\r\n//                         </Button>\r\n//                         <Button\r\n//                           variant=\"destructive\"\r\n//                           size=\"sm\"\r\n//                           onClick={() => handleDeletePromo(promo._id)}\r\n//                           className=\"rounded-lg\"\r\n//                         >\r\n//                           <Trash2 className=\"w-4 h-4 mr-1\" />\r\n//                           Delete\r\n//                         </Button>\r\n//                       </div>\r\n//                     </li>\r\n//                   ))}\r\n//                 </ul>\r\n//               )}\r\n//             </CardContent>\r\n//           </Card>\r\n//         </TabsContent>\r\n//       </Tabs>\r\n//     </div>\r\n//   );\r\n//   }\r\n\r\n\"use client\"\r\n\r\nimport type React from \"react\"\r\nimport { useState } from \"react\"\r\nimport { toast } from \"sonner\"\r\nimport { Label } from \"@/components/ui/label\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent } from \"@/components/ui/card\"\r\nimport { BookOpen, Upload } from \"lucide-react\"\r\n\r\ninterface Book {\r\n  contentType: \"book\"\r\n  title: string\r\n  author: string\r\n  description: string\r\n  imageUrl: string\r\n  pdfUrl: string\r\n  isFeatured: boolean\r\n}\r\n\r\ninterface Promo {\r\n  contentType: \"image\"\r\n  promoImageUrl: string\r\n  isActive: boolean\r\n  title?: string\r\n}\r\n\r\nexport default function AdminDashboard() {\r\n  const [newBookFormData, setNewBookFormData] = useState<Book>({\r\n    contentType: \"book\",\r\n    title: \"\",\r\n    author: \"\",\r\n    description: \"\",\r\n    imageUrl: \"\",\r\n    pdfUrl: \"\",\r\n    isFeatured: false,\r\n  })\r\n  const [newPromoFormData, setNewPromoFormData] = useState<Promo>({\r\n    contentType: \"image\",\r\n    promoImageUrl: \"\",\r\n    isActive: false,\r\n    title: \"Promotional Image\",\r\n  })\r\n  const [imageFile, setImageFile] = useState<File | null>(null)\r\n  const [pdfFile, setPdfFile] = useState<File | null>(null)\r\n  const [promoFile, setPromoFile] = useState<File | null>(null)\r\n  const [currentNewContentType, setCurrentNewContentType] = useState<\"book\" | \"image\">(\"book\")\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  // Handle dropdown change\r\n  const handleContentTypeChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    const newType = e.target.value as \"book\" | \"image\"\r\n    console.log(`🔄 Dropdown clicked, value: ${newType}`)\r\n    setCurrentNewContentType(newType)\r\n\r\n    // Reset forms and files\r\n    setNewBookFormData({\r\n      contentType: \"book\",\r\n      title: \"\",\r\n      author: \"\",\r\n      description: \"\",\r\n      imageUrl: \"\",\r\n      pdfUrl: \"\",\r\n      isFeatured: false,\r\n    })\r\n    setNewPromoFormData({\r\n      contentType: \"image\",\r\n      promoImageUrl: \"\",\r\n      isActive: false,\r\n      title: \"Promotional Image\",\r\n    })\r\n    setImageFile(null)\r\n    setPdfFile(null)\r\n    setPromoFile(null)\r\n\r\n    toast.info(`Switched to ${newType === \"book\" ? \"Book\" : \"Promotional Image\"} form`)\r\n    console.log(\"🔄 Form and files reset\")\r\n  }\r\n\r\n  // Handle book form input changes\r\n  const handleNewBookChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target\r\n    setNewBookFormData((prev) => ({ ...prev, [name]: value }))\r\n    console.log(`📝 Book form updated - ${name}: ${value}`)\r\n  }\r\n\r\n  // Handle promo form input changes\r\n  const handleNewPromoChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target\r\n    setNewPromoFormData((prev) => ({ ...prev, [name]: value }))\r\n    console.log(`📝 Promo form updated - ${name}: ${value}`)\r\n  }\r\n\r\n  // Handle file input changes\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>, fileType: \"image\" | \"pdf\" | \"promo\") => {\r\n    const file = e.target.files?.[0] || null\r\n    if (fileType === \"image\") {\r\n      setImageFile(file)\r\n      console.log(`📷 Book image selected: ${file?.name || \"none\"}`)\r\n    } else if (fileType === \"pdf\") {\r\n      setPdfFile(file)\r\n      console.log(`📄 Book PDF selected: ${file?.name || \"none\"}`)\r\n    } else {\r\n      setPromoFile(file)\r\n      console.log(`🖼️ Promo image selected: ${file?.name || \"none\"}`)\r\n    }\r\n  }\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    console.log(`🖱️ Add Content button clicked for ${currentNewContentType}`)\r\n    setLoading(true)\r\n\r\n    try {\r\n      if (currentNewContentType === \"book\") {\r\n        console.log(\"📤 Submitting book form with data:\", newBookFormData)\r\n        if (!newBookFormData.title || !newBookFormData.author || !newBookFormData.description) {\r\n          toast.error(\"⚠️ All book fields (title, author, description) are required\")\r\n          console.log(\"❌ Missing book fields:\", newBookFormData)\r\n          setLoading(false)\r\n          return\r\n        }\r\n        if (!imageFile || !pdfFile) {\r\n          toast.error(\"⚠️ Both image and PDF files are required for books\")\r\n          console.log(\"❌ Missing book files:\", { imageFile: !!imageFile, pdfFile: !!pdfFile })\r\n          setLoading(false)\r\n          return\r\n        }\r\n\r\n        // Upload files\r\n        const formData = new FormData()\r\n        formData.append(\"image\", imageFile)\r\n        formData.append(\"pdf\", pdfFile)\r\n        console.log(\"📤 Uploading book files to /api/book\")\r\n        const uploadRes = await fetch(\"/api/book\", {\r\n          method: \"POST\",\r\n          body: formData,\r\n        })\r\n        if (!uploadRes.ok) {\r\n          const errorData = await uploadRes.json()\r\n          throw new Error(errorData.message || \"Failed to upload files\")\r\n        }\r\n        const uploadData = await uploadRes.json()\r\n        console.log(\"✅ Book files uploaded:\", uploadData)\r\n\r\n        // Submit book data\r\n        const bookData = {\r\n          ...newBookFormData,\r\n          imageUrl: uploadData.imageUrl,\r\n          pdfUrl: uploadData.pdfUrl,\r\n        }\r\n        console.log(\"📤 Submitting book data to /api/booklibrary/:\", bookData)\r\n        const bookRes = await fetch(\"/api/booklibrary\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(bookData),\r\n        })\r\n        if (!bookRes.ok) throw new Error(\"Failed to save book\")\r\n        toast.success(\"✅ Book added successfully\")\r\n        console.log(\"✅ Book added successfully\")\r\n      } else {\r\n        console.log(\"📤 Submitting promo form with data:\", newPromoFormData)\r\n        if (!promoFile) {\r\n          toast.error(\"⚠️ Promo image file is required\")\r\n          console.log(\"❌ Missing promo file\")\r\n          setLoading(false)\r\n          return\r\n        }\r\n\r\n        // Submit promo data\r\n        const formData = new FormData()\r\n        formData.append(\"file\", promoFile)\r\n        formData.append(\"title\", newPromoFormData.title || \"Promotional Image\")\r\n        formData.append(\"isActive\", newPromoFormData.isActive.toString())\r\n        console.log(\"📤 Submitting promo data to /api/promo\")\r\n        const promoRes = await fetch(\"/api/upload-promo\", {\r\n          method: \"POST\",\r\n          body: formData,\r\n        })\r\n        if (!promoRes.ok) {\r\n          const errorData = await promoRes.json()\r\n          throw new Error(errorData.message || \"Failed to save promo image\")\r\n        }\r\n        toast.success(\"✅ Promo image added successfully\")\r\n        console.log(\"✅ Promo image added successfully\")\r\n      }\r\n\r\n      // Reset form after successful submission\r\n      setNewBookFormData({\r\n        contentType: \"book\",\r\n        title: \"\",\r\n        author: \"\",\r\n        description: \"\",\r\n        imageUrl: \"\",\r\n        pdfUrl: \"\",\r\n        isFeatured: false,\r\n      })\r\n      setNewPromoFormData({\r\n        contentType: \"image\",\r\n        promoImageUrl: \"\",\r\n        isActive: false,\r\n        title: \"Promotional Image\",\r\n      })\r\n      setImageFile(null)\r\n      setPdfFile(null)\r\n      setPromoFile(null)\r\n      console.log(\"🔄 Form and files reset after submission\")\r\n    } catch (error) {\r\n      toast.error(\"❌ Failed to add content\")\r\n      console.error(\"❌ Submission error:\", error)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 p-6\">\r\n      <Card className=\"max-w-4xl mx-auto shadow-lg border-0 bg-white rounded-xl\">\r\n        <CardHeader className=\"bg-blue-50 border-b rounded-t-xl p-6\">\r\n          <CardTitle className=\"flex items-center gap-3 text-2xl font-bold text-gray-800\">\r\n            <Upload className=\"w-6 h-6 text-blue-500\" />\r\n            Add New Content\r\n          </CardTitle>\r\n          <CardDescription className=\"text-gray-600\">\r\n            Fill in the required information to add a book or promotional image\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent className=\"p-8\">\r\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"contentType\" className=\"text-base font-semibold text-gray-700\">\r\n                Content Type\r\n              </Label>\r\n              <select\r\n                name=\"contentType\"\r\n                id=\"contentType\"\r\n                className=\"w-full border border-gray-300 rounded-lg p-3 bg-white focus:ring-2 focus:ring-blue-500 focus:border-transparent text-gray-700\"\r\n                value={currentNewContentType}\r\n                onChange={(e) => {\r\n                  console.log(\"🔄 Dropdown clicked, value:\", e.target.value)\r\n                  handleContentTypeChange(e)\r\n                }}\r\n              >\r\n                <option value=\"book\">📖 Book</option>\r\n                <option value=\"image\">🖼️ Promotional Image</option>\r\n              </select>\r\n            </div>\r\n\r\n            {currentNewContentType === \"book\" ? (\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"title\" className=\"text-gray-700\">Book Title</Label>\r\n                  <Input\r\n                    name=\"title\"\r\n                    value={newBookFormData.title}\r\n                    onChange={handleNewBookChange}\r\n                    required\r\n                    placeholder=\"Enter book title\"\r\n                    className=\"border-gray-300 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"author\" className=\"text-gray-700\">Author Name</Label>\r\n                  <Input\r\n                    name=\"author\"\r\n                    value={newBookFormData.author}\r\n                    onChange={handleNewBookChange}\r\n                    required\r\n                    placeholder=\"Enter author name\"\r\n                    className=\"border-gray-300 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n                <div className=\"md:col-span-2 space-y-2\">\r\n                  <Label htmlFor=\"description\" className=\"text-gray-700\">Description</Label>\r\n                  <Input\r\n                    name=\"description\"\r\n                    value={newBookFormData.description}\r\n                    onChange={handleNewBookChange}\r\n                    required\r\n                    placeholder=\"Enter book description\"\r\n                    className=\"border-gray-300 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"imageFile\" className=\"text-gray-700\">Cover Image</Label>\r\n                  <Input\r\n                    type=\"file\"\r\n                    name=\"imageFile\"\r\n                    onChange={(e) => handleFileChange(e, \"image\")}\r\n                    accept=\"image/jpeg,image/png,image/jpg\"\r\n                    required\r\n                    className=\"border-gray-300\"\r\n                  />\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"pdfFile\" className=\"text-gray-700\">PDF File</Label>\r\n                  <Input\r\n                    type=\"file\"\r\n                    name=\"pdfFile\"\r\n                    onChange={(e) => handleFileChange(e, \"pdf\")}\r\n                    accept=\"application/pdf\"\r\n                    required\r\n                    className=\"border-gray-300\"\r\n                  />\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"isFeatured\"\r\n                    checked={newBookFormData.isFeatured}\r\n                    onChange={(e) => {\r\n                      setNewBookFormData((prev) => ({ ...prev, isFeatured: e.target.checked }))\r\n                      console.log(`📝 Book isFeatured: ${e.target.checked}`)\r\n                    }}\r\n                    className=\"h-4 w-4 text-blue-600 border-gray-300 rounded\"\r\n                  />\r\n                  <Label htmlFor=\"isFeatured\" className=\"text-gray-700\">Display on Homepage</Label>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"title\" className=\"text-gray-700\">Promo Title</Label>\r\n                  <Input\r\n                    name=\"title\"\r\n                    value={newPromoFormData.title}\r\n                    onChange={handleNewPromoChange}\r\n                    placeholder=\"Enter promo title\"\r\n                    className=\"border-gray-300 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"promoFile\" className=\"text-gray-700\">Promotional Image</Label>\r\n                  <Input\r\n                    type=\"file\"\r\n                    name=\"promoFile\"\r\n                    onChange={(e) => handleFileChange(e, \"promo\")}\r\n                    accept=\"image/jpeg,image/png,image/jpg\"\r\n                    required\r\n                    className=\"border-gray-300\"\r\n                  />\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"isActive\"\r\n                    checked={newPromoFormData.isActive}\r\n                    onChange={(e) => {\r\n                      setNewPromoFormData((prev) => ({ ...prev, isActive: e.target.checked }))\r\n                      console.log(`📝 Promo isActive: ${e.target.checked}`)\r\n                    }}\r\n                    className=\"h-4 w-4 text-blue-600 border-gray-300 rounded\"\r\n                  />\r\n                  <Label htmlFor=\"isActive\" className=\"text-gray-700\">Display on Homepage</Label>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              className=\"w-full bg-blue-500 hover:bg-blue-600 text-white py-3 text-lg rounded-xl\"\r\n              onClick={() => console.log(\"🖱️ Add Content button clicked in UI\")}\r\n            >\r\n              {loading ? (\r\n                <span className=\"flex items-center gap-2\">\r\n                  <svg className=\"animate-spin h-5 w-5 text-white\" viewBox=\"0 0 24 24\">\r\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\r\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8v4a4 4 0 00-4 4H4z\" />\r\n                  </svg>\r\n                  Processing...\r\n                </span>\r\n              ) : (\r\n                \"Add Content\"\r\n              )}\r\n            </Button>\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  )\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}